# PHP

version: '2'

services:

  phpfpm:
    build: ./.docker/images/php-fpm
    volumes:
      - ./.docker/images/php-fpm/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./.docker/images/php-fpm/php.ini:/usr/local/etc/php/php.ini
      - ./app:/var/www/html

  nginx-app:
    build: ./.docker/images/nginx
    labels:
      com.datadoghq.sd.check.id: stub_nginx
    volumes:
      - ./.docker/images/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
      - ./app:/var/www/html
    ports:
      - "8080:80"
  web:
    build: web
    command: python app.py
    ports:
     - "5000:5000"
    volumes:
     - ./web:/code # modified here to take into account the new app path
    links:
     - redis
    environment:
     - DATADOG_HOST=datadog # used by the web app to initialize the Datadog library
  redis:
    image: redis
  # agent section
  datadog:
    build: datadog
    links:
     - redis # ensures that redis is a host that the container can find
     - web # ensures that the web app can send metrics
     - db
     - phpfpm
     - nginx-app
    environment:
     - API_KEY=1494478d3c9ecd25178256e8b7c1fde4
     - SD_BACKEND=docker
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
  # MYSQL
  db:
    image: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: logger
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: log_activities
    volumes:
      - ./.docker/data/mysql/:/docker-entrypoint-initdb.d
      - data_volume:/var/lib/mysql

volumes:
  data_volume:
